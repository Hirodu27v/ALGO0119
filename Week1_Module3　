今日は、計算論的思考のアイデアについてお話します。
これは、自動化アルゴリズムとAIを編集ワークフローに統合する方法を理解するのに役立ちます。
私の今日の目標は、この用語を分かりやすく説明し、なぜそれが重要かつ非常に強力な概念であるのかを示すことです。

ジャネット・ウィングさんを紹介しましょう。
彼女はコロンビア大学の教授です。計算論的思考の提唱者であり、
「情報を処理するエージェント（コンピュータ）が問題の解法を効果的に実行できる形式で表すための思考プロセス」と定義しています。
これが何を意味するのか、かみ砕いて詳しく説明しましょう。
計算論的思考はコンピューターのように考えることではありません。
人をコンピュータに変えることでもありません。
それは、コンピュータを問題を解決するためになるべく最良の方法で使用できるような方法を考えることです。

計算論的思考とは抽象化です。　　
ある問題が、より抽象的で一般的な問題の一部であることを認識することです。
抽象化、モデリング、分解、およびパラメータ化にはさまざまな側面があり、後で詳しく説明します。抽象化はスケールの考え方を可能にします。

これがデジタルコンピューティングの主な利点なのです。
問題を何度も繰り返し解決することができるので、百、千、百万の記事だって作り出せます。
また、計算論的思考はプログラミングそのものではありません。
プログラムのように効率的に解くことができるよう問題を整理することです。
必ずしも明らかではないものの、プログラミングを学ぶことは計算論的思考のスキルを習得する上で助けになるでしょう。

計算論的思考を取り上げる必要性はいったい何でしょうか？
機会があればMITの2人のエコノミストによる共著「ザ・セカンド・マシン・エイジ」をぜひお読みください。
経済学の法則に基づき、人間と機械の共生が効果的な生産を実現すると主張しています。
これはすなわち、コンピュータと人間の混成を作り出すことなのです。

計算論的思考を習得した人々は、自動化とアルゴリズムの機能を十分に引き出し、
コンピュータと人間の双方を活用する将来のハイブリッドワークフローを設計することができるでしょう。

次に、分解とパラメータ化のモデリングの説明を通じて、計算論的思考の別の面を掘り下げたいと思います。
コンピュータシステムの情報を簡略化して表現できるので、モデル化は重要です。
モデリングはコンピュータが処理しやすいように現実をより粗くした模型を作成することです。
ここにはあなたが知っていることを体系的に位置づける明確な編集プロセスが存在します。
モデルには何を含めるべきでしょうか。モデルから何を除外しますか？
どんな基準でモデルの強調すべき要素を選ぶべきでしょうか。

繰り返しになりますが、コンピュータが処理するには現実世界はあまりにも複雑すぎるので、現実をモデル化、つまり単純化しなければなりません。
例を挙げましょう。

Apple Newsのようなアプリの場合、あなたのためにパーソナライズされたセクションがあります。
Apple Newsは私が知りたいニュースが何か、全てを知っているわけではありませんが、以前のアプリとのやり取りや、
統計、興味、居場所、住所、その他のものに基づいて、私が興味を持つであろうもののモデルを作り出します。

アプリの開発者が私自身のモデルを持つということ。
私の完全な分身ではなく、私が誰で、何に興味があるのかを推定したものにすぎないにせよ、このモデルは非常に強力です。
Apple社はより私の興味にあったニュースを表示できるよう、さらに調節することを許可するよう勧めるでしょう。

これがモデリングです。
では、分解について話したいと思います。分解とは、プロセスのステップを分割することです。
巨大な問題や複雑なプロセスを小さいステップのサブシーケンスに分解するというアイデアなのです。
大きく複雑なタスクを、多くのより小さなより単純なタスクに分割すれば、そのうちのいくつかはコンピュータが処理できるかもしれません。
人間が必要で自動化できないタスクもありますが、分解することで、タスクの処理を人間とコンピュータのどちらが実行すべきか考えることができます。

そして、後から全てのサブタスクを再結合すればよいのです。
まとめると、分解とは、物事を細分化し、人間とコンピュータのどちらに適しているのかを判断してから、
さらに大きな問題を解決するためにバックアップを構築することです。

例えばデータジャーナリズムの記事を書くためのワークフローを考えてみましょう。
そのワークフローはいくつかのステップに分解できますよね。

スライドでは、五つのサブステップを示しています。最初のステップはデータ収集です。
2番目のステップは、そのデータを分析して、いくつかの興味深いイベント、異常値や傾向を特定することです。
第３のステップは、インサイトを優先することです。データで識別された、よりニュース価値のある、洞察に満ちた、重要なイベントはどれですか。
おそらく、これに続く第4ステップは仮説を考えることです。
得られたインサイトをどのように組み合わせて説得力のあるものにしますか。
最後のステップは記事を公開することです。記事をCMS（コンテンツ管理システム）に入れて、配布します。

データジャーナリズムの記事の執筆プロセスを五つステップに分割してみました。
これら五つのステップをさらに細かいサブタスクに分割することもできます。

最後に取り上げるのはパラメータ化についてです。
これは、抽象的なアルゴリズムを多くのケースに適用することです。
パラメータ化の概念を説明するために、レシピの比喩に戻りたいと思います。このレシピは通常のケーキでも、ベジタリアン向けのケーキでも役立ちます。
レシピの材料に卵がありますよね。レシピにとって卵は何ですか？
他の成分を混ぜて生地にするための何かがいります。
今日では、ベジタリアンのためのつなぎがあります。
亜麻仁粉などの別のつなぎを使用することもできます。
つなぎをアルゴリズムのパラメータとして抽象化することで、通常のケーキには卵、ベジタリアンケーキには亜麻仁粉を使用できます。
パラメータは広い範囲の文脈に沿ってアルゴリズムが多彩な結果を達成できるようにします。
同じアルゴリズムの異なるパラメータで、通常のケーキとベジタリアンケーキを作り分けることができます。

モデリング、分解、およびパラメータ化について説明しました。
これらは、計算論的思考の重要な三つの側面です。

これらの概念を習得したならば、計算論的思考の大部分を習得したと言えます。
繰り返しますが、これらのスキルを実際に実践したいのであれば、プログラミング言語を習得するのがよいでしょう。
最近、データジャーナリズムで最も人気のある言語は、RとPythonです。

さらにWebベースのプログラミングをするために、Javascriptを使ってみたいと思うかもしれません。
これで、第1週は終わりです。
